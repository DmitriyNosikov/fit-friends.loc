# Compose: docker compose --file=./docker-compose.yml --project-name "fit-friends" --env-file=./.env up -d
# Healthcheck: docker inspect fit-friends.pgadmin --format='{{.State.Health}}'
version: '3.9'
services:
  fit-friends.postgres:
    image: postgres:14-alpine
    restart: always
    container_name: fit-friends.postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - fit-friends:/data/postgresql

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d {POSTGRES_PASSWORD}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  fit-friends.pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: fit-friends.pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - ${PGADMIN_DEFAULT_PORT}:80
    # Указываем зависимость от сервиса (данный сервис стартует только)
    # после того, как будет запущен сервис, который указан в зависимости
    depends_on:
      - fit-friends.postgres

volumes:
  fit-friends:
